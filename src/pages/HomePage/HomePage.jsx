import React, { useState, useRef, useCallback } from 'react';
import ChessBoardView from '../../components/ChessBoardView/ChessBoardView';
import Clock from '../../components/Clock/Clock';
import Button from '../../components/Button/Button';
import styles from './HomePage.module.css';

// === –Ü–ú–ü–û–†–¢–£–Ñ–ú–û –ù–ê–® –ö–ê–°–¢–û–ú–ù–ò–ô –•–£–ö ===
import { useGameState } from '../../hooks/useGameState';

const HomePage = () => {
  // 1. WebSocket (–∑–∞–ª–∏—à–∞—î–º–æ –¥–ª—è –º–∞–π–±—É—Ç–Ω—å–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è)
  const socketRef = useRef(null);

  // 2. === –Ñ–î–ò–ù–ï –î–ñ–ï–†–ï–õ–û –Ü–°–¢–ò–ù–ò ===
  const {
    gameState,
    handleSquareClick,
    resetGameState
    // handleServerUpdate // –ó–≤—ñ—Å–Ω–æ, —Ç–∏ –Ω–µ –∑–∞–±—É–≤, —â–æ —Ü–µ –±—É–¥–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ
  } = useGameState(socketRef);

  // –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è –¥–ª—è —á–∏—Å—Ç–æ—Ç–∏ –∫–æ–¥—É
  const {
    boardPiecesObject,
    selectedSquare,
    whiteTime,
    blackTime,
    currentTurn
  } = gameState;

  // –°—Ç–∞–Ω –ª–∏—à–µ –¥–ª—è UI (–ö–µ—Ä—É—î—Ç—å—Å—è –ª–æ–∫–∞–ª—å–Ω–æ)
  const [showSquareId, setShowSquareId] = useState(false);

  // –§—É–Ω–∫—Ü—ñ—è-–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è —á–∞—Å—É
  const handleTimeUp = useCallback((color) => {
    console.log(`[GAME OVER] –ß–∞—Å –≥—Ä–∞–≤—Ü—è ${color} –≤–∏—á–µ—Ä–ø–∞–Ω–æ!`);
  }, []);

  // === üÜï –ù–û–í–ê –õ–û–ì–Ü–ö–ê: –°–∫–∏–¥–∞–Ω–Ω—è –≥—Ä–∏ ===
  const handleResetGame = useCallback(() => {
        resetGameState(); // <--- –í–ò–ö–õ–ò–ö–ê–Ñ–ú–û –õ–ò–®–ï –ß–ò–°–¢–£ –õ–û–ì–Ü–ö–£ –•–£–ö–ê!
        // –í–ò–î–ê–õ–ò–¢–ò: window.location.reload(); 
        // –í–ò–î–ê–õ–ò–¢–ò: console.warn("...");
    }, [resetGameState]); 

  // === üÜï –ù–û–í–ê –õ–û–ì–Ü–ö–ê: –¢–æ–≥–≥–ª –Ω–æ—Ç–∞—Ü—ñ–π –ø–æ–ª—ñ–≤ ===
  const handleToggleId = () => {
    setShowSquareId(prev => !prev);
  };


  return (
    <div className={styles.homePageWrapper}>
      <h1>Chess MVP (Controlled)</h1>

      <div style={{ display: 'flex', justifyContent: 'space-around', width: '100%', maxWidth: '600px' }}>
        {/* –ì–æ–¥–∏–Ω–Ω–∏–∫ –ß–æ—Ä–Ω–∏—Ö: –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –°–¢–ê–ù –∑ —Ö—É–∫–∞ */}
        <Clock
          initialTime={whiteTime}
          color="w"
          isActive={currentTurn === 'w'}
          onTimeUp={handleTimeUp}
        />

        {/* –ì–æ–¥–∏–Ω–Ω–∏–∫ –ë—ñ–ª–∏—Ö: –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –°–¢–ê–ù –∑ —Ö—É–∫–∞ */}
        <Clock
          initialTime={blackTime}
          color="b"
          isActive={currentTurn === 'b'}
          onTimeUp={handleTimeUp}
        />
      </div>

      {/* –î–æ—à–∫–∞: –æ—Ç—Ä–∏–º—É—î –°–¢–ê–ù —ñ –ö–õ–Ü–ö –∑ —Ö—É–∫–∞ */}
      <ChessBoardView
        showSquareId={showSquareId}
        boardPiecesObject={boardPiecesObject} // –ü–µ—Ä–µ–¥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω
        selectedSquare={selectedSquare}       // –ü–µ—Ä–µ–¥–∞—î–º–æ –≤–∏–¥—ñ–ª–µ–Ω—É –∫–ª—ñ—Ç–∏–Ω–∫—É
        onClick={handleSquareClick}           // –ü–µ—Ä–µ–¥–∞—î–º–æ —î–¥–∏–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫
      />

      <div className={styles.buttonGroup}>

        {/* üÜï –ö–Ω–æ–ø–∫–∞ –°–ö–ò–î–ê–ù–ù–Ø (–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–ª–∞—Å danger) */}
        <Button
          onClick={handleResetGame}
          className={styles.danger}
        >
          –°–∫–∏–Ω—É—Ç–∏ –≥—Ä—É
        </Button>

        {/* üÜï –¢–æ–≥–≥–ª-–∫–Ω–æ–ø–∫–∞ (–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–ª–∞—Å primary) */}
        <Button
          onClick={handleToggleId}
          className={showSquareId ? styles.primary : ''} // –ü—ñ–¥—Å–≤—ñ—á—É—î–º–æ, –∫–æ–ª–∏ –∞–∫—Ç–∏–≤–Ω–æ
        >
          {showSquareId ? '–ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ –Ω–æ—Ç–∞—Ü—ñ—ó' : '–ü–æ–∫–∞–∑–∞—Ç–∏ –Ω–æ—Ç–∞—Ü—ñ—ó'}
        </Button>
      </div>
    </div>
  );
};

export default HomePage;